{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oscar\\\\Desktop\\\\Coding\\\\Workspace\\\\typing-test\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport randomWords from \"random-words\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NUMB_OF_WORDS = 200;\nconst SECONDS = 60;\n\nfunction App() {\n  _s();\n\n  const [words, setWords] = useState([]);\n  useEffect(() => {\n    setWords(generateWords());\n  }, []);\n\n  function generateWords() {\n    return new Array(NUMB_OF_WORDS).fill(null).map(() => randomWords());\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: words.map((word, i) => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: word\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 27,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QrHlQthZFfwcsWWYyDJIvsds8f8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/oscar/Desktop/Coding/Workspace/typing-test/src/App.js"],"names":["useState","useEffect","randomWords","NUMB_OF_WORDS","SECONDS","App","words","setWords","generateWords","Array","fill","map","word","i"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,cAAxB;;;AAEA,MAAMC,aAAa,GAAG,GAAtB;AACA,MAAMC,OAAO,GAAG,EAAhB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ,CAACC,aAAa,EAAd,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASA,aAAT,GAAyB;AACvB,WAAO,IAAIC,KAAJ,CAAUN,aAAV,EAAyBO,IAAzB,CAA8B,IAA9B,EAAoCC,GAApC,CAAwC,MAAMT,WAAW,EAAzD,CAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,sBACGI,KAAK,CAACK,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KAAa;AACtB,kCACE;AAAA,uCACE;AAAA,4BAAOD;AAAP;AAAA;AAAA;AAAA;AAAA;AADF,+BADF;AAKD,aANA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA9BQP,G;;KAAAA,G;AAgCT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport randomWords from \"random-words\"\r\n\r\nconst NUMB_OF_WORDS = 200\r\nconst SECONDS = 60\r\n\r\nfunction App() {\r\n  const [words, setWords] = useState([])\r\n\r\n  useEffect(() => {\r\n    setWords(generateWords())\r\n  }, [])\r\n\r\n  function generateWords() {\r\n    return new Array(NUMB_OF_WORDS).fill(null).map(() => randomWords())\r\n  }\r\n\r\n  return (\r\n    <div className='App'>\r\n      <div className='section'>\r\n        <div className='card'>\r\n          <div className='card-content'>\r\n            <div className='content'>\r\n              {words.map((word, i) => {\r\n                return (\r\n                  <>\r\n                    <span>{word}</span>\r\n                  </>\r\n                )\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}