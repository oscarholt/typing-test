{"ast":null,"code":"var _jsxFileName = \"/Users/oscarholt/Desktop/Workspace/typing-test/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport randomWords from \"random-words\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NUMB_OF_WORDS = 200;\nconst SECONDS = 60;\n\nfunction App() {\n  _s();\n\n  const [words, setWords] = useState([]);\n  const [countDown, setCountDown] = useState(SECONDS);\n  useEffect(() => {\n    //Sets our words state to be an array of generated words using the random-words package\n    setWords(generateWords());\n  }, []);\n\n  function generateWords() {\n    // Returns an array of random words\n    return new Array(NUMB_OF_WORDS).fill(null).map(() => randomWords());\n  }\n\n  function start() {\n    let interval = setInterval(() => {\n      setCountDown(prevCountDown => {\n        if (prevCountDown === 0) {\n          clearInterval(interval);\n          return;\n        } else {\n          return prevCountDown - 1;\n        }\n      });\n    }, 1000);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"is-size-1 has-text-centered has-text-primary\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: countDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control is-expanded section\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-info is-fullwidth\",\n        onClick: start,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: words.map((word, i) => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: word.split(\"\").map((char, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: char\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 25\n                  }, this))\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [word, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"S7sZ23s8H09+9PTer1m/09oxd+s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/oscarholt/Desktop/Workspace/typing-test/src/App.js"],"names":["useState","useEffect","randomWords","NUMB_OF_WORDS","SECONDS","App","words","setWords","countDown","setCountDown","generateWords","Array","fill","map","start","interval","setInterval","prevCountDown","clearInterval","word","i","split","char","idx"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,cAAxB;;;AAEA,MAAMC,aAAa,GAAG,GAAtB;AACA,MAAMC,OAAO,GAAG,EAAhB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAACI,OAAD,CAA1C;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd;AACAM,IAAAA,QAAQ,CAACG,aAAa,EAAd,CAAR;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,WAASA,aAAT,GAAyB;AACvB;AACA,WAAO,IAAIC,KAAJ,CAAUR,aAAV,EAAyBS,IAAzB,CAA8B,IAA9B,EAAoCC,GAApC,CAAwC,MAAMX,WAAW,EAAzD,CAAP;AACD;;AAED,WAASY,KAAT,GAAiB;AACf,QAAIC,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC/BP,MAAAA,YAAY,CAAEQ,aAAD,IAAmB;AAC9B,YAAIA,aAAa,KAAK,CAAtB,EAAyB;AACvBC,UAAAA,aAAa,CAACH,QAAD,CAAb;AACA;AACD,SAHD,MAGO;AACL,iBAAOE,aAAa,GAAG,CAAvB;AACD;AACF,OAPW,CAAZ;AAQD,KATyB,EASvB,IATuB,CAA1B;AAUD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,8CAAf;AAAA,+BACE;AAAA,oBAAKT;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA,6BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eASE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,6BAAlB;AAAgD,QAAA,OAAO,EAAEM,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF,eAcE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,sBACGR,KAAK,CAACO,GAAN,CAAU,CAACM,IAAD,EAAOC,CAAP,KAAa;AACtB,kCACE;AAAA,wCACE;AAAA,4BACGD,IAAI,CAACE,KAAL,CAAW,EAAX,EAAeR,GAAf,CAAmB,CAACS,IAAD,EAAOC,GAAP,kBAClB;AAAA,8BAAOD;AAAP;AAAA;AAAA;AAAA;AAAA,0BADD;AADH,mBAAWF,CAAX;AAAA;AAAA;AAAA;AAAA,wBADF,eAME;AAAA,6BAAOD,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA,wBANF,eAOE;AAAA;AAAA;AAAA;AAAA,wBAPF;AAAA,8BADF;AAWD,aAZA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD;;GAjEQd,G;;KAAAA,G;AAmET,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport randomWords from \"random-words\";\n\nconst NUMB_OF_WORDS = 200;\nconst SECONDS = 60;\n\nfunction App() {\n  const [words, setWords] = useState([]);\n  const [countDown, setCountDown] = useState(SECONDS);\n\n  useEffect(() => {\n    //Sets our words state to be an array of generated words using the random-words package\n    setWords(generateWords());\n  }, []);\n\n  function generateWords() {\n    // Returns an array of random words\n    return new Array(NUMB_OF_WORDS).fill(null).map(() => randomWords());\n  }\n\n  function start() {\n    let interval = setInterval(() => {\n      setCountDown((prevCountDown) => {\n        if (prevCountDown === 0) {\n          clearInterval(interval);\n          return;\n        } else {\n          return prevCountDown - 1;\n        }\n      });\n    }, 1000);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"section\">\n        <div className=\"is-size-1 has-text-centered has-text-primary\">\n          <h2>{countDown}</h2>\n        </div>\n      </div>\n      <div className=\"control is-expanded section\">\n        <input type=\"text\" className=\"input\" />\n      </div>\n      <div className=\"section\">\n        <button className=\"button is-info is-fullwidth\" onClick={start}>\n          Start\n        </button>\n      </div>\n      <div className=\"section\">\n        <div className=\"card\">\n          <div className=\"card-content\">\n            <div className=\"content\">\n              {words.map((word, i) => {\n                return (\n                  <>\n                    <span key={i}>\n                      {word.split(\"\").map((char, idx) => (\n                        <span>{char}</span>\n                      ))}\n                    </span>\n                    <span>{word} </span>\n                    <span></span>\n                  </>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}