{"ast":null,"code":"var _jsxFileName = \"/Users/oscarholt/Desktop/Workspace/typing-test/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport randomWords from \"random-words\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NUMB_OF_WORDS = 200;\nconst SECONDS = 60;\n\nfunction App() {\n  _s();\n\n  const [words, setWords] = useState([]);\n  const [countDown, setCountDown] = useState(SECONDS);\n  const [currentInput, setCurrentInput] = useState(\"\");\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  useEffect(() => {\n    //Sets our words state to be an array of generated words using the random-words package\n    setWords(generateWords());\n  }, []);\n\n  function generateWords() {\n    // Returns an array of random words\n    return new Array(NUMB_OF_WORDS).fill(null).map(() => randomWords());\n  }\n\n  function start() {\n    let interval = setInterval(() => {\n      setCountDown(prevCountDown => {\n        if (prevCountDown === 0) {\n          clearInterval(interval);\n          return;\n        } else {\n          return prevCountDown - 1;\n        }\n      });\n    }, 1000);\n  }\n\n  function handleKeyDown(_ref) {\n    let {\n      keyCode\n    } = _ref;\n    console.log(keyCode);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"is-size-1 has-text-centered has-text-primary\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: countDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control is-expanded section\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input\",\n        onKeyDown: handleKeyDown,\n        value: currentInput,\n        onChange: e => setCurrentInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-info is-fullwidth\",\n        onClick: start,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: words.map((word, i) => {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: word.split(\"\").map((char, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: char\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wWrc9wuu1HoaKxBt+BtPQUrUgAM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/oscarholt/Desktop/Workspace/typing-test/src/App.js"],"names":["useState","useEffect","randomWords","NUMB_OF_WORDS","SECONDS","App","words","setWords","countDown","setCountDown","currentInput","setCurrentInput","currentWordIndex","setCurrentWordIndex","generateWords","Array","fill","map","start","interval","setInterval","prevCountDown","clearInterval","handleKeyDown","keyCode","console","log","e","target","value","word","i","split","char","idx"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport randomWords from \"random-words\";\n\nconst NUMB_OF_WORDS = 200;\nconst SECONDS = 60;\n\nfunction App() {\n  const [words, setWords] = useState([]);\n  const [countDown, setCountDown] = useState(SECONDS);\n  const [currentInput, setCurrentInput] = useState(\"\");\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n\n  useEffect(() => {\n    //Sets our words state to be an array of generated words using the random-words package\n    setWords(generateWords());\n  }, []);\n\n  function generateWords() {\n    // Returns an array of random words\n    return new Array(NUMB_OF_WORDS).fill(null).map(() => randomWords());\n  }\n\n  function start() {\n    let interval = setInterval(() => {\n      setCountDown((prevCountDown) => {\n        if (prevCountDown === 0) {\n          clearInterval(interval);\n          return;\n        } else {\n          return prevCountDown - 1;\n        }\n      });\n    }, 1000);\n  }\n\n  function handleKeyDown({ keyCode }) {\n    console.log(keyCode);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"section\">\n        <div className=\"is-size-1 has-text-centered has-text-primary\">\n          <h2>{countDown}</h2>\n        </div>\n      </div>\n      <div className=\"control is-expanded section\">\n        <input\n          type=\"text\"\n          className=\"input\"\n          onKeyDown={handleKeyDown}\n          value={currentInput}\n          onChange={(e) => setCurrentInput(e.target.value)}\n        />\n      </div>\n      <div className=\"section\">\n        <button className=\"button is-info is-fullwidth\" onClick={start}>\n          Start\n        </button>\n      </div>\n      <div className=\"section\">\n        <div className=\"card\">\n          <div className=\"card-content\">\n            <div className=\"content\">\n              {words.map((word, i) => {\n                return (\n                  <span key={i}>\n                    <span>\n                      {word.split(\"\").map((char, idx) => (\n                        <span key={idx}>{char}</span>\n                      ))}\n                    </span>\n                    <span> </span>\n                  </span>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}